apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: julianjanine-jponc-dev-crt
spec:
  secretName: julianjanine-jponc-dev-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: "julianjanine.jponc.dev"
  dnsNames:
  - "julianjanine.jponc.dev"
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: my-grpc-service
spec:
  virtualhost:
    fqdn: julianjanine.jponc.dev
    tls:
      secretName: julianjanine-jponc-dev-tls
    corsPolicy:
        allowCredentials: true
        allowOrigin:
          - "*" # allows any origin
        allowMethods:
          - GET
          - POST
          - OPTIONS
        allowHeaders:
          - authorization
          - cache-control
          - x-grpc-web
          - x-user-agent
          - content-type
        exposeHeaders:
          - Content-Length
          - Content-Range
        maxAge: "10m" # preflight requests can be cached for 10 minutes.
  routes:
  - conditions:
    - prefix: / # Matches everything else.
    services:
    - name: julianjanine-grpc
      port: 9001
      protocol: h2c
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: julianjanine-grpc
  name: julianjanine-grpc
spec:
  ports:
  - port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: julianjanine-grpc
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: julianjanine-grpc
  name: julianjanine-grpc
spec:
  selector:
    matchLabels:
      app: julianjanine-grpc
  replicas: 3
  template:
    metadata:
      labels:
        app: julianjanine-grpc
    spec:
      containers:
      - name: julianjanine-grpc
        image: julianponce/julianjanine-grpc:41a1a13
        ports:
          - containerPort: 9001
        env:
          - name: PORT
            value: "9001"
        envFrom:
          - secretRef:
              name: julianjanine-grpc-secret
